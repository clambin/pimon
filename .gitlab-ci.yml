stages:
  - test
  - build
  - release

.test_only:
  only:
    changes:
      - "*.py"
      - "metrics/*.py"

.build_only:
  only:
    changes:
      - "*.py"
      - "metrics/*.py"
      - "Dockerfile*"
      - .gitlab-ci.yml

.docker_build:
  # using 17.12: stable doesn't work on RPI (can't connect to docker socket)
  image: docker:17.12
  services:
    - docker:17.12-dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_CLI_EXPERIMENTAL: enabled
  except:
    - tags
  extends: .build_only
  before_script:
    # TODO: wrap TAG logic in a script and call that when needed?
    - export VERSION=$(grep -i ^version version.py | awk '{ print $3 }' | tr -d \');
    - if [[ $CI_COMMIT_REF_NAME == "master" ]]; then
         export TAG=$VERSION;
      elif [[ $CI_COMMIT_REF_NAME == "release-$VERSION" ]]; then
         export TAG="dev-$VERSION";
      else
         export TAG="dev";
      fi
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin
    - export CI_PROJECT_PATH=$(echo $CI_PROJECT_PATH | tr "[:upper:]" "[:lower:]")

.docker_build_stable:
  extends: .docker_build
  # and since 'docker manifest' doesn't work on RPI on 17.12, we'll use stable for that
  image: docker:stable
  services:
    - docker:stable-dind

flake8:
  stage: test
  extends: .test_only
  image: python:3.7-alpine
  before_script:
    - python -m venv venv
    - source venv/bin/activate
    - pip install -U flake8
  script:
    - flake8 --max-line-length 120 *.py metric/*.py

pytest:
  stage: test
  extends: .test_only
  image: python:3.7-alpine
  before_script:
    - python -m venv venv
    - source venv/bin/activate
    - pip install pipenv
    - pipenv install
  script:
    - cd tests && pytest

build_arm:
  stage: build
  extends: .docker_build
  tags:
    - docker
    - arm
  script:
    - docker build --pull
                   --cache-from "$CI_PROJECT_PATH":"$TAG"
                   --build-arg BASE_IMAGE=arm32v7/python:3.7-alpine
                   -t "$CI_PROJECT_PATH":"$TAG" .
    - docker push "$CI_PROJECT_PATH":"$TAG"

# smoke test goes here

publish:
  stage: release
  extends: .docker_build
  tags:
    - docker
  only:
    - master
  script:
    - docker tag "$CI_PROJECT_PATH":"$TAG"  "$CI_PROJECT_PATH":latest
    - docker push "$CI_PROJECT_PATH":latest

github:
  stage: release
  only:
    - master
  before_script:
    - export TAG=$(grep -i ^version version.py | awk '{ print $3 }' | tr -d \');
  script:
    - git remote set-url origin "https://$GITHUB_USER:$GITHUB_TOKEN@github.com/$CI_PROJECT_PATH.git"
    - git tag $TAG
    - git push --tags